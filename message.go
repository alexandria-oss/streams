package streams

import "time"

// A Message is the unit of transport containing information generated by a system.
// In addition, it contains metadata used by `streams` internal mechanisms.
// A Message will be/is transported through one or more streams.
type Message struct {
	ID         string            `json:"message_id"`      // Message unique identifier.
	StreamName string            `json:"stream_name"`     // Name of the stream this Message will be/is transported.
	StreamKey  string            `json:"stream_key"`      // A key used by underlying systems to route a Message to specific partitions/queues.
	Headers    map[string]string `json:"message_headers"` // Map which passes additional context and metadata about the message.
	// Type of Data content.
	//
	// The usage of the RFC2046 MIME specification is preferred (e.g. application/json, application/xml).
	//
	// [Reference](https://www.rfc-editor.org/rfc/rfc2046).
	ContentType string    `json:"content_type"`
	Data        []byte    `json:"data"`         // Encoded information generated by a system.
	Time        time.Time `json:"message_time"` // Timestamp of a Message publishing operation.
	DecodedData any       `json:"-"`            // Only available on readers. Decoded Data using an underlying codec.Codec implementation.
}
